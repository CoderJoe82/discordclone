{"version":3,"sources":["Redux/types/types.js","Components/PostText/post.text.js","Components/MessageBlock/message.block.js","Components/ChatBox/chat.box.js","Components/MainDisplay/main.display.js","App.js","Redux/reducers/reducers.js","Redux/store/redux.store.js","index.js"],"names":["SET_SUBMIT_POST","PostText","props","handleChange","e","setState","inputValue","target","value","handleSubmitPostText","posts","length","shift","dispatch","type","payload","state","document","getElementById","id","maxLength","placeholder","onChange","this","onClick","Component","connect","MessageBlock","messageText","ChatBox","map","post","Math","floor","Date","getTime","random","MainDisplay","App","Fragment","large","up","className","initialState","rootReducer","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render"],"mappings":"8VAAaA,EAAkB,kB,OCKzBC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZC,WAAYF,EAAEG,OAAOC,SATN,EAanBC,qBAAuB,WACjB,EAAKP,MAAMQ,MAAMC,OAAS,IAC5B,EAAKT,MAAMQ,MAAME,QACjB,EAAKV,MAAMW,SAAS,CAClBC,KAAMd,EACNe,QAAS,EAAKC,MAAMV,cAGtB,EAAKJ,MAAMW,SAAS,CAClBC,KAAMd,EACNe,QAAS,EAAKC,MAAMV,aAINW,SAASC,eAAe,kBAEhCV,MAAQ,IA3BlB,EAAKQ,MAAQ,CACXV,WAAY,IAHG,E,0CAgCnB,WACE,OACE,sBAAKa,GAAG,WAAR,UACE,uBACEL,KAAK,OACLK,GAAG,iBACHC,UAAU,MACVC,YAAY,4BACZC,SAAUC,KAAKpB,eAEjB,wBAAQgB,GAAG,mBAAmBK,QAASD,KAAKd,qBAA5C,2B,GA3CegB,aA+DRC,eAZS,SAACV,GACvB,MAAO,CACLN,MAAOM,EAAMN,UAIU,SAACG,GAC1B,MAAO,CACLA,cAIWa,CAA6CzB,GCtD7C0B,G,wKATX,WACI,OACI,qBAAKR,GAAK,gBAAV,SACI,4BAAII,KAAKrB,MAAM0B,oB,GALJH,cCErBI,E,4JAEJ,WACE,OACE,qBAAKV,GAAG,UAAR,SAEQI,KAAKrB,MAAMQ,MAAMoB,KAAI,SAACC,GACpB,OAAO,cAAC,EAAD,CAAcH,YAAeG,GAAaC,KAAKC,OAAM,IAAIC,MAAOC,WAA6B,gBAAhBH,KAAKI,qB,GAPnFX,aA2BPC,eAZS,SAACV,GACvB,MAAO,CACLN,MAAOM,EAAMN,SAUFgB,CAAyBG,GChBzBQ,E,4JAVX,WACI,OACI,sBAAKlB,GAAK,cAAV,UACI,cAAC,EAAD,IACA,cAAC,EAAD,W,GALUM,aCaXa,MAbf,WACE,OACE,cAAC,IAAMC,SAAP,UACE,cAAC,aAAD,CAAYC,OAAK,EAACC,IAAE,EAApB,SACE,sBAAKC,UAAU,MAAf,UACE,oBAAIvB,GAAG,eAAP,qDACA,cAAC,EAAD,Y,wBCTJwB,EAAe,CACjBjC,MAAO,IAkBIkC,EAfK,WAAmC,IAAlC5B,EAAiC,uDAAzB2B,EAAcE,EAAW,uCAElD,OAAOA,EAAO/B,MACV,KAAKd,EACD,OAAO,2BACAgB,GADP,IAEIN,MAAM,GAAD,mBAAMM,EAAMN,OAAZ,CAAmBmC,EAAO9B,YAGvC,QACI,OAAOC,ICRJ8B,EALDC,YACVH,EACAI,OAAOC,8BAAgCD,OAAOC,gCCGlDD,OAAOF,MAAQA,EAEfI,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,qBAAD,UACE,cAAC,EAAD,QAGJ7B,SAASC,eAAe,W","file":"static/js/main.a3bb76dc.chunk.js","sourcesContent":["export const SET_SUBMIT_POST = 'SET_SUBMIT_POST'","import \"./post.text.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { SET_SUBMIT_POST } from \"../../Redux/types/types\";\n\nclass PostText extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      inputValue: e.target.value,\n    });\n  };\n\n  handleSubmitPostText = () => {\n    if (this.props.posts.length > 15) {\n      this.props.posts.shift();\n      this.props.dispatch({\n        type: SET_SUBMIT_POST,\n        payload: this.state.inputValue,\n      });\n    } else {\n      this.props.dispatch({\n        type: SET_SUBMIT_POST,\n        payload: this.state.inputValue,\n      });\n    }\n\n    const textInput = document.getElementById(\"submitTextSpot\");\n\n    textInput.value = \"\";\n  };\n\n  render() {\n    return (\n      <div id=\"postText\">\n        <input\n          type=\"text\"\n          id=\"submitTextSpot\"\n          maxLength=\"100\"\n          placeholder=\"Type your message here...\"\n          onChange={this.handleChange}\n        />\n        <button id=\"submitChatButton\" onClick={this.handleSubmitPostText}>\n          Submit\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.posts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    dispatch,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostText);\n","import './message.block.css'\nimport React, { Component } from 'react'\n\nclass MessageBlock extends Component {\n\n    render() {\n        return (\n            <div id = \"messageBlocks\">\n                <p>{this.props.messageText}</p>\n            </div>\n        )\n    }\n}\n\nexport default MessageBlock","import \"./chat.box.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport MessageBlock from \"../MessageBlock/message.block\";\n\nclass ChatBox extends Component {\n\n  render() {\n    return (\n      <div id=\"chatBox\">\n          {\n              this.props.posts.map((post) => {\n                return <MessageBlock messageText = {post} key = {Math.floor(new Date().getTime() * (Math.random() * 890484948543890))}/>\n              })\n          }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.posts,\n  };\n};\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         dispatch,\n//     }\n// }\n\nexport default connect(mapStateToProps)(ChatBox);\n","import './main.display.css'\nimport React, { Component } from 'react'\nimport PostText from '../PostText/post.text'\nimport ChatBox from '../ChatBox/chat.box'\n\nclass MainDisplay extends Component {\n    render() {\n        return (\n            <div id = \"displaySpot\">\n                <ChatBox />\n                <PostText />\n            </div>\n        )\n    }\n}\n\nexport default MainDisplay","import React from \"react\";\nimport { Breakpoint } from \"react-socks\";\nimport \"./App.css\";\nimport MainDisplay from \"./Components/MainDisplay/main.display\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Breakpoint large up>\n        <div className=\"App\">\n          <h1 id=\"appTitleText\">Basic Discord Clone (offline chat demo)</h1>\n          <MainDisplay />\n        </div>\n      </Breakpoint>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { SET_SUBMIT_POST } from '../types/types'\n\nconst initialState = {\n    posts: []\n}\n\nconst rootReducer = (state = initialState, action) => {\n\n    switch(action.type) {\n        case SET_SUBMIT_POST: {\n            return {\n                ...state,\n                posts: [...state.posts, action.payload]\n            }\n        }\n        default:\n            return state\n    }\n\n}\n\nexport default rootReducer","import { createStore } from 'redux'\nimport rootReducer from '../reducers/reducers'\n\nconst store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"../src/Redux/store/redux.store\";\nimport { Provider } from \"react-redux\";\nimport { BreakpointProvider } from \"react-socks\";\n\nwindow.store = store;\n\nReactDOM.render(\n  <Provider store={store}>\n    <BreakpointProvider>\n      <App />\n    </BreakpointProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}